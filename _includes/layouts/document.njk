---
layout: layouts/base.njk
---

<main class="viewport-container">
  <div class="page" style="margin-top: var(--space-x-large);">
    <h1 class="page-heading">{{ title }}</h1>

    <div class="page-content prose" style="grid-area: grouping;">
      {{ layoutContent | safe }}

      {%- for item in builder %}
        {% if item.type === 'Code' %}
          <p>TODO: Add Code builder logic.</p>
        {% elif item.type === 'Markdown' %}
          <p>TODO: Add Markdown builder logic.</p>
        {% endif %}
      {%- endfor -%}
    </div>

    <!-- 
    Thoughts FOR using <style> inline / Jon E
    ===
    
    If product end modifications are made to styles
    and mutual components, take the organization benefits of
    CSS-in-JS learned from React Search and Public Website,
    and put those modifications together so changes to the
    website front end (HTML, CSS, and JS) require minimal
    understanding of the file organization of the project.

    This encourages contributions by increasing the usability
    of making code changes since they have fewer steps and require
    less prior knowedge (eg, understanding codebase organization).

    It's supported in all browsers and performant too. ¯\_(ツ)_/¯
    -->
    <nav aria-labelled-by="neighbors-heading" class="aside-nav">
      <h2 class="subtle-heading">{{ parent }}</h2>

      {% set documents = collections.all | eleventyNavigation(parent | title) %}

      <ol>
        {%- for document in documents %}
          <li>
            <a href="{{ document.url }}">{{ document.title }}</a>
          </li>
        {%- endfor -%}
      </ol>
    </nav>
  </div>
</main>