---
layout: layouts/base.njk
---

<main class="viewport-container">
  <div class="page" style="margin-top: var(--space-x-large);">
    <h1 class="page-heading">{{ title }}</h1>

    <div class="page-content prose" style="grid-area: grouping;">
      {{ layoutContent | safe }}

      {%- for item in builder %}
        {% if item.type | lower === 'code' %}
          <style>
            .code-rendered {
              padding: var(--space-large);
              border: solid 1px var(--color-neutral-100);
              border-radius: 4px 4px 0 0;

              background-image: linear-gradient(45deg,var(--color-blue-100) 25%,transparent 25%),linear-gradient(135deg,var(--color-blue-100) 25%,transparent 25%),linear-gradient(45deg,transparent 75%,var(--color-blue-100) 75%),linear-gradient(135deg,transparent 75%,var(--color-blue-100) 75%);
              background-size: 24px 24px;
              background-position: 0 0,12px 0,12px -12px,0 12px;
            }

            .code-source {
              padding: var(--space-large);
              border: solid 1px var(--color-neutral-500);
              border-top: none;
              background: var(--color-neutral-400);
              color: var(--color-neutral-100);
              border-radius: 0 0 4px 4px;
            }

            .code-source > pre {
              margin: 0;
            }

            button {
              margin: 0;
            }
          </style>
          <div class="code-rendered">
            {{ item.code.code | safe }}
          </div>
          <div class="code-source">
            {% highlight "html" %}
            {{ item.code.code | safe }}
            {% endhighlight %}
          </div>

          <form action="https://codepen.io/pen/define" method="POST" target="_blank">
            <input
            type="hidden"
            name="data"
            value='{
              "title": "{{ title }} — Design System — University of Michigan Library",
              "html": "{{ metadata.codepen | safe | replace('"', '\\"') | replace('\'', '&#39;') | replace('\n', '\\n')}} {{ item.code.code | safe | replace('"', '\\"') | replace('\'', '&#39;') | replace('\n', '\\n') }}",
              "css_external": "https://unpkg.com/@umich-lib/web@v1/umich-lib.css",
              "layout": "left",
              "editors": "100"
            }'/>
            <input type="submit" value="Open in CodePen" style="margin: 0; margin-top: var(--space-small);"
            class="button" />
          </form>

        {% elif item.type | lower === 'markdown' %}
          {% markdown %}{{ item.markdown }}{% endmarkdown %}
        {% elif item.type | lower === 'color' %}
          <section class="color-palettes">
            <style>
              .color-palettes {
                display: grid;
                grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
                gap: var(--space-medium);
                margin-top: var(--space-xx-large);
              }
              .color-palette ol {
                list-style: none;
                margin: 0;
                padding: 0;
              }
              .color-palette li {
                padding: var(--space-medium);
                margin: 0;
                display: flex;
                justify-content: space-between;
              }
              /* COLOR TOKENS */
              #color-orange-400 {
                color: var(--color-neutral-500);
              }
              #color-blue-300,
              #color-blue-400,
              #color-blue-500,
              #color-green-500,
              #color-indigo-400,
              #color-indigo-500,
              #color-neutral-300,
              #color-neutral-400,
              #color-neutral-500,
              #color-orange-500,
              #color-pink-400,
              #color-pink-500,
              #color-teal-400,
              #color-teal-500 {
                color: white;
              }
            </style>
            {% for palette, color_palette in color | groupby("meta.palette") %}
              <div class="color-palette">
                <h3 class="visually-hidden">{{ palette }}</h3>
                <ol>
                  {% for token in color_palette %}
                    <li style="background: var(--{{token.name}});" id="{{token.name}}">
                      <code>var(--{{token.name}})</code>
                      <code>{{token.value}}</code>
                    </li>
                  {% endfor %}
                </ol>
              </div>
            {% endfor %}
          </section>
        {% endif %}
      {%- endfor -%}
    </div>

    <!-- 
    Thoughts FOR using <style> inline / Jon E
    ===
    
    If product end modifications are made to styles
    and mutual components, take the organization benefits of
    CSS-in-JS learned from React Search and Public Website,
    and put those modifications together so changes to the
    website front end (HTML, CSS, and JS) require minimal
    understanding of the file organization of the project.

    This encourages contributions by increasing the usability
    of making code changes since they have fewer steps and require
    less prior knowedge (eg, understanding codebase organization).

    It's supported in all browsers and performant too. ¯\_(ツ)_/¯
    -->
    <nav aria-labelled-by="neighbors-heading" class="aside-nav">
      <h2 class="subtle-heading">{{ parent }}</h2>

      {% set documents = collections.all | eleventyNavigation(parent | title) %}

      <ol>
        {%- for document in documents %}
          <li>
            <a href="{{ document.url }}">{{ document.title }}</a>
          </li>
        {%- endfor -%}
      </ol>
    </nav>
  </div>
</main>